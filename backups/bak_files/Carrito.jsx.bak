import React from "react";
import { useNavigate, Link } from "react-router-dom";
import { useCart } from "../context/CartContext";
import productos from "../data/productos";

export default function Carrito() {
  const { cart, setItemQuantity, removeFromCart, clearCart } = useCart();
  const navigate = useNavigate();

  const lineas = Object.entries(cart).map(([codigo, cantidad]) => {
    const prod = productos.find(p => p.codigo === codigo) || { nombre: codigo, precio: 0 };
    return { codigo, cantidad, nombre: prod.nombre, precio: prod.precio };
  });

  const total = lineas.reduce((s, r) => s + r.precio * r.cantidad, 0);

  function confirmarPedido() {
    // Guardar pedido confirmado en localStorage y limpiar carrito
    const pedido = {};
    lineas.forEach(l => pedido[l.codigo] = l.cantidad);
    localStorage.setItem('pedidoConfirmado', JSON.stringify(pedido));
    clearCart();
    navigate('/confirmacion');
  }

  return (
    <>
      <header className="site">
        <div className="container nav">
          <div className="brand"><Link to="/">HuertoHogar</Link></div>
          <nav className="navbar navbar-expand-lg">
            <ul className="navbar-nav me-auto mb-2 mb-lg-0">
              <li className="nav-item"><Link className="nav-link" to="/">Inicio</Link></li>
              <li className="nav-item"><Link className="nav-link" to="/catalogo">Catálogo</Link></li>
              <li className="nav-item"><Link className="nav-link" to="/carrito">Carrito</Link></li>
            </ul>
          </nav>
        </div>
      </header>

      <main className="container my-4">
        <h2>Carrito</h2>
        {lineas.length === 0 ? (
          <p>Tu carrito está vacío. <Link to="/catalogo">Ir al catálogo</Link></p>
        ) : (
          <div className="table-responsive">
            <table className="table">
              <thead>
                <tr><th>Producto</th><th>Cantidad</th><th>Precio</th><th>Subtotal</th><th></th></tr>
              </thead>
              <tbody>
                {lineas.map(l => (
                  <tr key={l.codigo}>
                    <td>{l.nombre}</td>
                    <td>
                      <div className="d-flex gap-2 align-items-center">
                        <button className="btn btn-sm btn-outline-secondary" onClick={() => setItemQuantity(l.codigo, l.cantidad - 1)}>-</button>
                        <span>{l.cantidad}</span>
                        <button className="btn btn-sm btn-outline-secondary" onClick={() => setItemQuantity(l.codigo, l.cantidad + 1)}>+</button>
                      </div>
                    </td>
                    <td>{new Intl.NumberFormat('es-CL',{style:'currency',currency:'CLP',maximumFractionDigits:0}).format(l.precio)}</td>
                    <td>{new Intl.NumberFormat('es-CL',{style:'currency',currency:'CLP',maximumFractionDigits:0}).format(l.precio * l.cantidad)}</td>
                    <td><button className="btn btn-sm btn-danger" onClick={() => removeFromCart(l.codigo)}>Quitar</button></td>
                  </tr>
                ))}
              </tbody>
              <tfoot>
                <tr>
                  <th colSpan={3}>Total</th>
                  <th>{new Intl.NumberFormat('es-CL',{style:'currency',currency:'CLP',maximumFractionDigits:0}).format(total)}</th>
                  <th></th>
                </tr>
              </tfoot>
            </table>
            <div className="d-flex gap-2">
              <button className="btn btn-success" onClick={confirmarPedido}>Confirmar pedido</button>
              <button className="btn btn-secondary" onClick={() => clearCart()}>Vaciar carrito</button>
            </div>
          </div>
        )}
      </main>
    </>
  );
}
